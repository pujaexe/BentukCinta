// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 6366ps4JUXGcyRNfgAokBX
// Component: cWWh_VXruR120
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { NavigationBar } from "@plasmicpkgs/plasmic-nav"; // plasmic-import: jGx9tiKJoex/codeComponent
import TombolCinta from "../../TombolCinta"; // plasmic-import: KWGUqEZOm9/component
import { Reveal } from "@plasmicpkgs/react-awesome-reveal"; // plasmic-import: R6s1FdhksG/codeComponent
import FiturCard from "../../FiturCard"; // plasmic-import: bQ8noILEe4/component
import PriceCard from "../../PriceCard"; // plasmic-import: q8Lmfm3hoF/component
import { GraphCMSFetcher } from "@plasmicpkgs/plasmic-graphcms"; // plasmic-import: 8sYtOZawA08/codeComponent
import { GraphCMSField } from "@plasmicpkgs/plasmic-graphcms"; // plasmic-import: _3Kx5FMtA8n/codeComponent

import { useScreenVariants as useScreenVariantslPlKhvYjoqxXf } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: lPlKHVYjoqxXF/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_bentukcinta.module.css"; // plasmic-import: 6366ps4JUXGcyRNfgAokBX/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: cWWh_VXruR120/css

import InfoSvgrepoComsvgIcon from "./icons/PlasmicIcon__InfoSvgrepoComsvg"; // plasmic-import: f1NunFb58W/icon
import CameraSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__CameraSvgrepoCom1Svg"; // plasmic-import: ZxNANnHwpx/icon
import GpsLocationLocatorSvgrepoComsvgIcon from "./icons/PlasmicIcon__GpsLocationLocatorSvgrepoComsvg"; // plasmic-import: drHf3YSXFW/icon
import CommentDotsSvgrepoComsvgIcon from "./icons/PlasmicIcon__CommentDotsSvgrepoComsvg"; // plasmic-import: 504XqCjwr2/icon
import SoundSvgrepoComsvgIcon from "./icons/PlasmicIcon__SoundSvgrepoComsvg"; // plasmic-import: KSPMBHFJ3A/icon
import WhatsappSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__WhatsappSvgrepoCom1Svg"; // plasmic-import: w2Zl9wBm8_/icon
import PlasmicLogosvgIcon from "./icons/PlasmicIcon__PlasmicLogosvg"; // plasmic-import: mSn2UckVtI/icon
import HygraphsvgIcon from "./icons/PlasmicIcon__Hygraphsvg"; // plasmic-import: 6hITHOMuHn/icon
import NexjssvgIcon from "./icons/PlasmicIcon__Nexjssvg"; // plasmic-import: ZDvhChlwlY/icon
import BentukcintaLogosvgIcon from "./icons/PlasmicIcon__BentukcintaLogosvg"; // plasmic-import: gnyHE0HjTj/icon

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  navigationBar?: p.Flex<typeof NavigationBar>;
  header?: p.Flex<"header">;
  udangan?: p.Flex<"div">;
  udangan2?: p.Flex<"div">;
  about?: p.Flex<"section">;
  row?: p.Flex<"div">;
  item?: p.Flex<"div">;
  item2?: p.Flex<"div">;
  item3?: p.Flex<"div">;
  item4?: p.Flex<"div">;
  feature?: p.Flex<"section">;
  row2?: p.Flex<"div">;
  title?: p.Flex<"div">;
  price?: p.Flex<"section">;
  row3?: p.Flex<"div">;
  title2?: p.Flex<"div">;
  items?: p.Flex<"div">;
  items2?: p.Flex<"div">;
  items3?: p.Flex<"div">;
  items4?: p.Flex<"div">;
  items5?: p.Flex<"div">;
  items6?: p.Flex<"div">;
  items7?: p.Flex<"div">;
  items8?: p.Flex<"div">;
  items13?: p.Flex<"div">;
  items14?: p.Flex<"div">;
  items15?: p.Flex<"div">;
  items16?: p.Flex<"div">;
  items9?: p.Flex<"div">;
  items10?: p.Flex<"div">;
  items11?: p.Flex<"div">;
  items12?: p.Flex<"div">;
  contact?: p.Flex<"section">;
  row4?: p.Flex<"div">;
  title3?: p.Flex<"div">;
  portfolio?: p.Flex<"section">;
  graphCmsFetcher?: p.Flex<typeof GraphCMSFetcher>;
  graphCmsField?: p.Flex<typeof GraphCMSField>;
  partner?: p.Flex<"section">;
  footer?: p.Flex<"footer">;
  logo2?: p.Flex<"div">;
  ul?: p.Flex<"ul">;
};

export interface DefaultHomepageProps {}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantslPlKhvYjoqxXf()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicHomepage.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox___1Aw2D)}>
              <NavigationBar
                data-plasmic-name={"navigationBar"}
                data-plasmic-override={overrides.navigationBar}
                brand={
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___1NUag
                    )}
                    component={Link}
                    href={"#" as const}
                    platform={"nextjs"}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__bpJuC)}
                      displayHeight={"40px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"none" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      src={{
                        src: "/plasmic/bentukcinta/images/asset1Svg.svg",
                        fullWidth: 300,
                        fullHeight: 83,
                        aspectRatio: 3.593579
                      }}
                    />
                  </p.PlasmicLink>
                }
                className={classNames("__wab_instance", sty.navigationBar)}
                closeButton={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__x1BI)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    src={"https://static1.plasmic.app/close.svg" as const}
                  />
                }
                itemsGap={24 as const}
                menuItems={
                  <React.Fragment>
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__jmajm
                      )}
                      component={Link}
                      href={"#about" as const}
                      platform={"nextjs"}
                    >
                      {"Tentang Kami"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__xom55
                      )}
                      component={Link}
                      href={"#feature" as const}
                      platform={"nextjs"}
                    >
                      {"Fitur"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__fzjmP
                      )}
                      component={Link}
                      href={"#price" as const}
                      platform={"nextjs"}
                    >
                      {"Harga"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link___4CugS
                      )}
                      component={Link}
                      href={
                        "https://api.whatsapp.com/send?phone=%2b6281916567373%20&text=Hi,%20saya%20mau%20pesan%20undangan%20online." as const
                      }
                      platform={"nextjs"}
                    >
                      <TombolCinta
                        className={classNames(
                          "__wab_instance",
                          sty.tombolCinta__yrwp2
                        )}
                        size={"small" as const}
                      >
                        {"Contact Us"}
                      </TombolCinta>
                    </p.PlasmicLink>
                  </React.Fragment>
                }
                openButton={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___22Rru)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    src={"https://static1.plasmic.app/menu.svg" as const}
                  />
                }
                responsiveBreakpoint={768 as const}
              />
            </div>
          ) : null}

          <p.Stack
            as={"header"}
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            hasGap={true}
            className={classNames(projectcss.all, sty.header)}
            id={"home" as const}
          >
            <Reveal
              className={classNames("__wab_instance", sty.reveal__ap9FL)}
              triggerOnce={true}
            >
              <div className={classNames(projectcss.all, sty.columns__dAsKi)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__lCuwH)}
                >
                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__lLx6J)}
                    >
                      <h1
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1__t9FK8
                        )}
                      >
                        {"Ciee masih ngundang pake kartu! Online Donk!"}
                      </h1>

                      <dd
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.dd___7AAcH
                        )}
                      >
                        {
                          "Bentuk cinta siap membantumu dengan sepenuh hati untuk ngundang pake cara baru"
                        }
                      </dd>
                    </p.Stack>
                  ) : null}
                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__xj8Yc)}
                    >
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__xgmtr
                        )}
                        component={Link}
                        href={"#about" as const}
                        platform={"nextjs"}
                      >
                        <TombolCinta
                          className={classNames(
                            "__wab_instance",
                            sty.tombolCinta__cmga5
                          )}
                          size={"large" as const}
                        >
                          {"Pelajari Selengkapnya"}
                        </TombolCinta>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link___37P78
                        )}
                        component={Link}
                        href={
                          "https://api.whatsapp.com/send?phone=%2b6281916567373%20&text=Hi,%20saya%20mau%20pesan%20undangan%20online." as const
                        }
                        platform={"nextjs"}
                      >
                        <TombolCinta
                          className={classNames(
                            "__wab_instance",
                            sty.tombolCinta__uGjeo
                          )}
                          size={"large" as const}
                          type={"secondary" as const}
                        >
                          {"Buat Undangan"}
                        </TombolCinta>
                      </p.PlasmicLink>
                    </p.Stack>
                  ) : null}

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__rd5T0)}
                  >
                    <div
                      data-plasmic-name={"udangan"}
                      data-plasmic-override={overrides.udangan}
                      className={classNames(projectcss.all, sty.udangan)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__lDkzc
                        )}
                      >
                        {"100+"}
                      </h3>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xIKX
                        )}
                      >
                        {"Undangan"}
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"udangan2"}
                      data-plasmic-override={overrides.udangan2}
                      className={classNames(projectcss.all, sty.udangan2)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__p4Vqh
                        )}
                      >
                        {"5+"}
                      </h3>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uluIo
                        )}
                      >
                        {"Template"}
                      </div>
                    </div>
                  </p.Stack>
                </p.Stack>

                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.column___40O0S)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__wjx6R)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"70%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/bentukcinta/images/bgHeroBentukcintapng.png",
                        fullWidth: 599,
                        fullHeight: 644,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__sWvd1)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"60%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/bentukcinta/images/elipBgpng.png",
                        fullWidth: 512,
                        fullHeight: 547,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                ) : null}
              </div>
            </Reveal>
          </p.Stack>

          <p.Stack
            as={"section"}
            data-plasmic-name={"about"}
            data-plasmic-override={overrides.about}
            hasGap={true}
            className={classNames(projectcss.all, sty.about)}
            id={"about" as const}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"row"}
              data-plasmic-override={overrides.row}
              hasGap={true}
              className={classNames(projectcss.all, sty.row)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__cyDe6)}
              >
                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <div className={classNames(projectcss.all, sty.column__qaVd)}>
                    <Reveal
                      cascade={false}
                      className={classNames(
                        "__wab_instance",
                        sty.reveal__kTiUd
                      )}
                      effect={"slide" as const}
                      reverse={false}
                      triggerOnce={true}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___7OA6)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"60%" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/bentukcinta/images/phoneImageMinpng.png",
                          fullWidth: 600,
                          fullHeight: 710,
                          aspectRatio: undefined
                        }}
                      />
                    </Reveal>
                  </div>
                ) : null}

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__d49Yd)}
                >
                  <Reveal
                    className={classNames("__wab_instance", sty.reveal__dhjFe)}
                    direction={"right" as const}
                    effect={"slide" as const}
                    reverse={false}
                    triggerOnce={true}
                  >
                    {true ? (
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ehkTt
                        )}
                      >
                        <h1
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1__cizVw
                          )}
                        >
                          {"Kenapa Bentukcinta?"}
                        </h1>

                        <dd
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.dd__xs1Wz
                          )}
                        >
                          {
                            "BentukCinta.com merupakan platform undangan pernikahan yang berbasis website responsive atau yang lebih dikenal dengan undangan digital / undangan online. Kami hadir untuk memudahkan urusan undangan pernikahan kalian. Semua ada di ujung jarimu, tidak perlu repot lagi."
                          }
                        </dd>
                      </p.Stack>
                    ) : null}

                    <div
                      className={classNames(projectcss.all, sty.freeBox__cjmw0)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"item"}
                        data-plasmic-override={overrides.item}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.item)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gbPhc
                          )}
                        >
                          {"💌"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yNIj
                          )}
                        >
                          {"Praktis"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"item2"}
                        data-plasmic-override={overrides.item2}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.item2)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__pthRt
                          )}
                        >
                          {"🕐"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ggDgx
                          )}
                        >
                          {"Hemat Waktu"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"item3"}
                        data-plasmic-override={overrides.item3}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.item3)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__m5SEj
                          )}
                        >
                          {"💪"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___3I8JH
                          )}
                        >
                          {"Hemat Tenaga"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"item4"}
                        data-plasmic-override={overrides.item4}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.item4)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nmNfm
                          )}
                        >
                          {"🤑"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__imXr5
                          )}
                        >
                          {"Hemat Biaya"}
                        </div>
                      </p.Stack>
                    </div>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__eTxF1
                      )}
                      component={Link}
                      href={
                        "https://api.whatsapp.com/send?phone=%2b6281916567373%20&text=Hi,%20saya%20mau%20pesan%20undangan%20online." as const
                      }
                      platform={"nextjs"}
                    >
                      <TombolCinta
                        className={classNames(
                          "__wab_instance",
                          sty.tombolCinta__hm9PO
                        )}
                        size={"large" as const}
                      >
                        {"Buat Undangan"}
                      </TombolCinta>
                    </p.PlasmicLink>
                  </Reveal>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"section"}
            data-plasmic-name={"feature"}
            data-plasmic-override={overrides.feature}
            hasGap={true}
            className={classNames(projectcss.all, sty.feature)}
            id={"feature" as const}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"row2"}
              data-plasmic-override={overrides.row2}
              hasGap={true}
              className={classNames(projectcss.all, sty.row2)}
            >
              <Reveal
                className={classNames("__wab_instance", sty.reveal___5N3TF)}
                direction={"down" as const}
                effect={"slide" as const}
                triggerOnce={true}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"title"}
                    data-plasmic-override={overrides.title}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.title)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1___2FnT
                      )}
                    >
                      {"Fasilitas Undangan"}
                    </h1>

                    <dd
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.dd___3Hf3
                      )}
                    >
                      {
                        "Bentukcinta.com menawarkan berbagai fitur untuk undangan online mu agar undangan onlinemu menjadi lebih berguna dan elegan"
                      }
                    </dd>
                  </p.Stack>
                ) : null}
              </Reveal>

              <Reveal
                className={classNames("__wab_instance", sty.reveal___5F4Zh)}
                direction={"up" as const}
                effect={"slide" as const}
                triggerOnce={true}
              >
                <div className={classNames(projectcss.all, sty.freeBox__q1L7Y)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__wzRp4)}
                  >
                    <FiturCard
                      className={classNames(
                        "__wab_instance",
                        sty.fiturCard__cYwMw
                      )}
                      slot={"Informasi Undangan"}
                      slot2={
                        "Memberikan informasi detail pasangan dan lokasi waktu upacara."
                      }
                    >
                      <InfoSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg__hdr3A)}
                        role={"img"}
                      />
                    </FiturCard>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__bg4H6)}
                  >
                    <FiturCard
                      className={classNames(
                        "__wab_instance",
                        sty.fiturCard___85HQg
                      )}
                      slot={"Gallery Photo dan Video"}
                      slot2={
                        "Berbagi moment indah terbaik kalian dengan foto dan video yang berkualitas."
                      }
                    >
                      <CameraSvgrepoCom1SvgIcon
                        className={classNames(projectcss.all, sty.svg__hqga8)}
                        role={"img"}
                      />
                    </FiturCard>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__dBsfI)}
                  >
                    <FiturCard
                      className={classNames(
                        "__wab_instance",
                        sty.fiturCard__uIdYf
                      )}
                      slot={"Peta Lokasi Upacara"}
                      slot2={
                        "Terhubung dengan google map, untuk mempermudah mencari lokasi."
                      }
                    >
                      <GpsLocationLocatorSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg__iYf8)}
                        role={"img"}
                      />
                    </FiturCard>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__rqiu)}
                  >
                    <FiturCard
                      className={classNames(
                        "__wab_instance",
                        sty.fiturCard__jo0XM
                      )}
                      slot={"Kolom Komentar"}
                      slot2={
                        "Tamu dapat memberi ucapan selamat, doa restu untuk kalian yang berbahagia."
                      }
                    >
                      <CommentDotsSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg__uGb3J)}
                        role={"img"}
                      />
                    </FiturCard>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox___2Cdml)}
                  >
                    <FiturCard
                      className={classNames(
                        "__wab_instance",
                        sty.fiturCard__bCdyc
                      )}
                      slot={"Background Lagu"}
                      slot2={
                        "Ceriakan undangan pernikahan dengan berlatar music favorit kalian."
                      }
                    >
                      <SoundSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg__eKrmg)}
                        role={"img"}
                      />
                    </FiturCard>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__opkZa)}
                  >
                    <FiturCard
                      className={classNames(
                        "__wab_instance",
                        sty.fiturCard__rgvl7
                      )}
                      slot={"Layanan WhatsApp"}
                      slot2={
                        "Sewaktu-waktu tamu ingin info lebih lanjut bisa chat via button WhatsApp."
                      }
                    >
                      <WhatsappSvgrepoCom1SvgIcon
                        className={classNames(projectcss.all, sty.svg__jvBuS)}
                        role={"img"}
                      />
                    </FiturCard>
                  </div>
                </div>

                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ou9V8)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link___69CYx
                      )}
                      component={Link}
                      href={
                        "https://api.whatsapp.com/send?phone=%2b6281916567373%20&text=Hi,%20saya%20mau%20pesan%20undangan%20online." as const
                      }
                      platform={"nextjs"}
                    >
                      {true ? (
                        <TombolCinta
                          className={classNames(
                            "__wab_instance",
                            sty.tombolCinta__kytll
                          )}
                          size={"large" as const}
                          type={"primary" as const}
                        >
                          {"Buat Undangan"}
                        </TombolCinta>
                      ) : null}
                    </p.PlasmicLink>
                  </div>
                ) : null}
              </Reveal>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"section"}
            data-plasmic-name={"price"}
            data-plasmic-override={overrides.price}
            hasGap={true}
            className={classNames(projectcss.all, sty.price)}
            id={"price" as const}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"row3"}
              data-plasmic-override={overrides.row3}
              hasGap={true}
              className={classNames(projectcss.all, sty.row3)}
            >
              <Reveal
                className={classNames("__wab_instance", sty.reveal__lqijz)}
                direction={"down" as const}
                effect={"slide" as const}
                triggerOnce={true}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"title2"}
                    data-plasmic-override={overrides.title2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.title2)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__fjCBp
                      )}
                    >
                      {"Harga"}
                    </h1>

                    <dd
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.dd__eTKg4
                      )}
                    >
                      {"Berikut adalah paket yang bisa kamu pilih"}
                    </dd>
                  </p.Stack>
                ) : null}
              </Reveal>

              <Reveal
                className={classNames("__wab_instance", sty.reveal__fb5QM)}
                direction={"up" as const}
                effect={"slide" as const}
                triggerOnce={true}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___7ZipU)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__vfsIu)}
                  >
                    <PriceCard
                      className={classNames(
                        "__wab_instance",
                        sty.priceCard___0YTJm
                      )}
                      item={
                        <React.Fragment>
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"items"}
                            data-plasmic-override={overrides.items}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.items)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___5S2YK
                              )}
                            >
                              {"✅"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___8Ac0M
                              )}
                            >
                              {"Pilih Tema Standar"}
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"items2"}
                            data-plasmic-override={overrides.items2}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.items2)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__n8X7H
                              )}
                            >
                              {"✅"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__naJb1
                              )}
                            >
                              {"1 Foto Sampul"}
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"items3"}
                            data-plasmic-override={overrides.items3}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.items3)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xBSot
                              )}
                            >
                              {"✅"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___0DoDd
                              )}
                            >
                              {"Foto Galery max. 4 Foto"}
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"items4"}
                            data-plasmic-override={overrides.items4}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.items4)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___5BaVn
                              )}
                            >
                              {"✅"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__bWscD
                              )}
                            >
                              {"Peta Lokasi"}
                            </div>
                          </p.Stack>
                        </React.Fragment>
                      }
                      linkProp={
                        "https://api.whatsapp.com/send?phone=%2b6281916567373%20&text=Hi,%20saya%20mau%20pesan%20undangan%20online." as const
                      }
                    >
                      {"Dasar"}
                    </PriceCard>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__infz6)}
                  >
                    <PriceCard
                      className={classNames(
                        "__wab_instance",
                        sty.priceCard__viu9K
                      )}
                      harga={
                        <React.Fragment>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___18CFh
                            )}
                          >
                            {"Rp 200.000"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__eEgOg
                            )}
                          >
                            {"Rp 100.000"}
                          </div>
                        </React.Fragment>
                      }
                      isHighlight={true}
                      item={
                        <React.Fragment>
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"items5"}
                            data-plasmic-override={overrides.items5}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.items5)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___0IYuz
                              )}
                            >
                              {"✅"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___5SeEc
                              )}
                            >
                              {"Pilih Tema Premium"}
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"items6"}
                            data-plasmic-override={overrides.items6}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.items6)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___3Xudo
                              )}
                            >
                              {"✅"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__yO5Fv
                              )}
                            >
                              {"3 Foto Sampul"}
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"items7"}
                            data-plasmic-override={overrides.items7}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.items7)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__gN58
                              )}
                            >
                              {"✅"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__dj0WK
                              )}
                            >
                              {"12 Foto Gallery"}
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"items8"}
                            data-plasmic-override={overrides.items8}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.items8)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ry7X
                              )}
                            >
                              {"✅"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ablqO
                              )}
                            >
                              {"Video Gallery"}
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"items13"}
                            data-plasmic-override={overrides.items13}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.items13)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ojUYj
                              )}
                            >
                              {"✅"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__n5Dqd
                              )}
                            >
                              {"Lagu Backsound"}
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"items14"}
                            data-plasmic-override={overrides.items14}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.items14)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___3KsG4
                              )}
                            >
                              {"✅"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__eXxAn
                              )}
                            >
                              {"WhatsApp"}
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"items15"}
                            data-plasmic-override={overrides.items15}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.items15)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__k5OSx
                              )}
                            >
                              {"✅"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__oiv2D
                              )}
                            >
                              {"Peta Lokasi"}
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"items16"}
                            data-plasmic-override={overrides.items16}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.items16)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ujVzh
                              )}
                            >
                              {"✅"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__gB94
                              )}
                            >
                              {"Komentar Facebook"}
                            </div>
                          </p.Stack>
                        </React.Fragment>
                      }
                      linkProp={
                        "https://api.whatsapp.com/send?phone=%2b6281916567373%20&text=Hi,%20saya%20mau%20pesan%20undangan%20online." as const
                      }
                    >
                      {"Premium"}
                    </PriceCard>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__n69Qg)}
                  >
                    <PriceCard
                      className={classNames(
                        "__wab_instance",
                        sty.priceCard__tqj3F
                      )}
                      harga={
                        <React.Fragment>
                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___8LGxo
                              )}
                            >
                              {"Rp 100.000"}
                            </div>
                          ) : null}

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xiPwr
                            )}
                          >
                            {"Hubungi Kami"}
                          </div>
                        </React.Fragment>
                      }
                      isAddDescription={true}
                      item={
                        <React.Fragment>
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"items9"}
                            data-plasmic-override={overrides.items9}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.items9)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__aJqH
                              )}
                            >
                              {"✅"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__eL2Pn
                              )}
                            >
                              {"Pilih Tema Standar"}
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"items10"}
                            data-plasmic-override={overrides.items10}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.items10)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__n8X7H
                              )}
                            >
                              {"✅"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__naJb1
                              )}
                            >
                              {"3 Foto Sampul"}
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"items11"}
                            data-plasmic-override={overrides.items11}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.items11)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xBSot
                              )}
                            >
                              {"✅"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___0DoDd
                              )}
                            >
                              {"foto"}
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"items12"}
                            data-plasmic-override={overrides.items12}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.items12)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___5BaVn
                              )}
                            >
                              {"✅"}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__bWscD
                              )}
                            >
                              {"Peta Lokasi"}
                            </div>
                          </p.Stack>
                        </React.Fragment>
                      }
                      linkProp={
                        "https://api.whatsapp.com/send?phone=%2b6281916567373%20&text=Hi,%20saya%20mau%20pesan%20undangan%20online." as const
                      }
                      slot={
                        "Mari kita bicarakan dari hati ke hati Siapa tau jodohkan?"
                      }
                    >
                      {"Kustom"}
                    </PriceCard>
                  </div>
                </div>
              </Reveal>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"section"}
            data-plasmic-name={"contact"}
            data-plasmic-override={overrides.contact}
            hasGap={true}
            className={classNames(projectcss.all, sty.contact)}
            id={"contact" as const}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"row4"}
              data-plasmic-override={overrides.row4}
              hasGap={true}
              className={classNames(projectcss.all, sty.row4)}
            >
              <Reveal
                className={classNames("__wab_instance", sty.reveal__e6Fon)}
                triggerOnce={true}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"title3"}
                    data-plasmic-override={overrides.title3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.title3)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.columns__k5ZX)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.column__cjvgq
                        )}
                      >
                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__f19S0
                            )}
                          >
                            <h4
                              className={classNames(
                                projectcss.all,
                                projectcss.h4,
                                projectcss.__wab_text,
                                sty.h4__fkKFy
                              )}
                            >
                              {"Yuk bisa yuk, kita onlinekan"}
                            </h4>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__sJmYv
                              )}
                            >
                              {
                                "Jadikan Bentukcinta bagian dari sejarah perjalan cintamu sekarang juga"
                              }
                            </div>
                          </div>
                        ) : null}

                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__qDi9E
                          )}
                          component={Link}
                          href={
                            "https://api.whatsapp.com/send?phone=%2b6281916567373%20&text=Hi,%20saya%20mau%20pesan%20undangan%20online." as const
                          }
                          platform={"nextjs"}
                        >
                          <TombolCinta
                            className={classNames(
                              "__wab_instance",
                              sty.tombolCinta__hMlpa
                            )}
                            size={"large" as const}
                          >
                            {"Buat Undangan Sekarang"}
                          </TombolCinta>
                        </p.PlasmicLink>
                      </p.Stack>

                      {(
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? true
                          : true
                      ) ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__b6GKr
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__yyrwe)}
                            displayHeight={"auto" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"300px" as const}
                            loading={"lazy" as const}
                            src={{
                              src: "/plasmic/bentukcinta/images/iPhoneXBannerMinpng.png",
                              fullWidth: 628,
                              fullHeight: 696,
                              aspectRatio: undefined
                            }}
                          />
                        </div>
                      ) : null}
                    </div>
                  </p.Stack>
                ) : null}
              </Reveal>
            </p.Stack>
          </p.Stack>

          {true ? (
            <p.Stack
              as={"section"}
              data-plasmic-name={"portfolio"}
              data-plasmic-override={overrides.portfolio}
              hasGap={true}
              className={classNames(projectcss.all, sty.portfolio)}
              id={"portfolio" as const}
            >
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__z7Fjz)}>
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__aUc2G
                    )}
                  >
                    {"Mereka sudah menggunakan Bentuk Cinta"}
                  </h4>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__hbbK)}
                  >
                    <GraphCMSFetcher
                      data-plasmic-name={"graphCmsFetcher"}
                      data-plasmic-override={overrides.graphCmsFetcher}
                      className={classNames(
                        "__wab_instance",
                        sty.graphCmsFetcher
                      )}
                      noLayout={true}
                      query={{
                        query:
                          "query MyQuery {\n  pengantins {\n    id\n    slug\n    title\n  }\n}\n",
                        variables: {}
                      }}
                    >
                      <ph.DataCtxReader>
                        {$ctx => (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__sjCgq
                            )}
                          >
                            <p.PlasmicLink
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                sty.link__pFLzA
                              )}
                              component={Link}
                              href={`/${(() => {
                                try {
                                  return $ctx.graphCmsItem.slug;
                                } catch (e) {
                                  if (e instanceof TypeError) {
                                    return "";
                                  }
                                  throw e;
                                }
                              })()}`}
                              platform={"nextjs"}
                              target={"_blank" as const}
                            >
                              <GraphCMSField
                                data-plasmic-name={"graphCmsField"}
                                data-plasmic-override={overrides.graphCmsField}
                                className={classNames(
                                  "__wab_instance",
                                  sty.graphCmsField
                                )}
                                path={["title"]}
                              />
                            </p.PlasmicLink>
                          </div>
                        )}
                      </ph.DataCtxReader>
                    </GraphCMSFetcher>
                  </div>
                </div>
              ) : null}
            </p.Stack>
          ) : null}

          <p.Stack
            as={"section"}
            data-plasmic-name={"partner"}
            data-plasmic-override={overrides.partner}
            hasGap={true}
            className={classNames(projectcss.all, sty.partner)}
            id={"partner" as const}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__q2Q69)}
            >
              <PlasmicLogosvgIcon
                className={classNames(projectcss.all, sty.svg___5Cvnz)}
                role={"img"}
              />

              <HygraphsvgIcon
                className={classNames(projectcss.all, sty.svg___453QJ)}
                role={"img"}
              />

              <NexjssvgIcon
                className={classNames(projectcss.all, sty.svg__lH6Nj)}
                role={"img"}
              />
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"footer"}
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            hasGap={true}
            className={classNames(projectcss.all, sty.footer)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__qcFqX)}
            >
              <div className={classNames(projectcss.all, sty.column__ratQz)}>
                {true ? (
                  <div
                    data-plasmic-name={"logo2"}
                    data-plasmic-override={overrides.logo2}
                    className={classNames(projectcss.all, sty.logo2)}
                  >
                    <BentukcintaLogosvgIcon
                      className={classNames(projectcss.all, sty.svg__ptWe5)}
                      role={"img"}
                    />
                  </div>
                ) : null}

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jt3L
                  )}
                >
                  {
                    "Jasa undangan pernikahan digital / undangan pernikahan online di Bali. Membantu untuk memudahakan urusan undangan pernikahan anda hemat biaya, hemat tenaga dan hemat waktu."
                  }
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.column__k6Gd4)}>
                <h6
                  className={classNames(
                    projectcss.all,
                    projectcss.h6,
                    projectcss.__wab_text,
                    sty.h6__qb6Ou
                  )}
                >
                  {"Links"}
                </h6>

                <ul
                  data-plasmic-name={"ul"}
                  data-plasmic-override={overrides.ul}
                  className={classNames(projectcss.all, projectcss.ul, sty.ul)}
                >
                  <li
                    className={classNames(
                      projectcss.all,
                      projectcss.li,
                      projectcss.__wab_text,
                      sty.li___9LOo
                    )}
                  >
                    {"Beranda"}
                  </li>

                  <li
                    className={classNames(
                      projectcss.all,
                      projectcss.li,
                      projectcss.__wab_text,
                      sty.li__ua9Q3
                    )}
                  >
                    {"Tentang Kami"}
                  </li>

                  <li
                    className={classNames(
                      projectcss.all,
                      projectcss.li,
                      projectcss.__wab_text,
                      sty.li___3RjK4
                    )}
                  >
                    {"Harga"}
                  </li>
                </ul>
              </div>

              <div className={classNames(projectcss.all, sty.column__xqkOo)}>
                <h6
                  className={classNames(
                    projectcss.all,
                    projectcss.h6,
                    projectcss.__wab_text,
                    sty.h6__srEbH
                  )}
                >
                  {"Alamat"}
                </h6>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__r5Fr8
                  )}
                >
                  {
                    "Jln. Ngurah Rai, Gg. XX, No. 9X, Br. Pande - Blahbatuh, Gianyar-Bali"
                  }
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__m1Rdl
                  )}
                >
                  {"+62 819-1656-7373\n+62 819-1617-2944"}
                </div>
              </div>
            </p.Stack>

            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__a59G)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__twTIm
                  )}
                >
                  {"Build with 💖 by"}
                </div>

                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__qGmBn
                  )}
                  component={Link}
                  href={`/`}
                  platform={"nextjs"}
                >
                  {"Bentukcinta.com"}
                </p.PlasmicLink>
              </p.Stack>
            ) : null}
          </p.Stack>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navigationBar",
    "header",
    "udangan",
    "udangan2",
    "about",
    "row",
    "item",
    "item2",
    "item3",
    "item4",
    "feature",
    "row2",
    "title",
    "price",
    "row3",
    "title2",
    "items",
    "items2",
    "items3",
    "items4",
    "items5",
    "items6",
    "items7",
    "items8",
    "items13",
    "items14",
    "items15",
    "items16",
    "items9",
    "items10",
    "items11",
    "items12",
    "contact",
    "row4",
    "title3",
    "portfolio",
    "graphCmsFetcher",
    "graphCmsField",
    "partner",
    "footer",
    "logo2",
    "ul"
  ],
  navigationBar: ["navigationBar"],
  header: ["header", "udangan", "udangan2"],
  udangan: ["udangan"],
  udangan2: ["udangan2"],
  about: ["about", "row", "item", "item2", "item3", "item4"],
  row: ["row", "item", "item2", "item3", "item4"],
  item: ["item"],
  item2: ["item2"],
  item3: ["item3"],
  item4: ["item4"],
  feature: ["feature", "row2", "title"],
  row2: ["row2", "title"],
  title: ["title"],
  price: [
    "price",
    "row3",
    "title2",
    "items",
    "items2",
    "items3",
    "items4",
    "items5",
    "items6",
    "items7",
    "items8",
    "items13",
    "items14",
    "items15",
    "items16",
    "items9",
    "items10",
    "items11",
    "items12"
  ],
  row3: [
    "row3",
    "title2",
    "items",
    "items2",
    "items3",
    "items4",
    "items5",
    "items6",
    "items7",
    "items8",
    "items13",
    "items14",
    "items15",
    "items16",
    "items9",
    "items10",
    "items11",
    "items12"
  ],
  title2: ["title2"],
  items: ["items"],
  items2: ["items2"],
  items3: ["items3"],
  items4: ["items4"],
  items5: ["items5"],
  items6: ["items6"],
  items7: ["items7"],
  items8: ["items8"],
  items13: ["items13"],
  items14: ["items14"],
  items15: ["items15"],
  items16: ["items16"],
  items9: ["items9"],
  items10: ["items10"],
  items11: ["items11"],
  items12: ["items12"],
  contact: ["contact", "row4", "title3"],
  row4: ["row4", "title3"],
  title3: ["title3"],
  portfolio: ["portfolio", "graphCmsFetcher", "graphCmsField"],
  graphCmsFetcher: ["graphCmsFetcher", "graphCmsField"],
  graphCmsField: ["graphCmsField"],
  partner: ["partner"],
  footer: ["footer", "logo2", "ul"],
  logo2: ["logo2"],
  ul: ["ul"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navigationBar: typeof NavigationBar;
  header: "header";
  udangan: "div";
  udangan2: "div";
  about: "section";
  row: "div";
  item: "div";
  item2: "div";
  item3: "div";
  item4: "div";
  feature: "section";
  row2: "div";
  title: "div";
  price: "section";
  row3: "div";
  title2: "div";
  items: "div";
  items2: "div";
  items3: "div";
  items4: "div";
  items5: "div";
  items6: "div";
  items7: "div";
  items8: "div";
  items13: "div";
  items14: "div";
  items15: "div";
  items16: "div";
  items9: "div";
  items10: "div";
  items11: "div";
  items12: "div";
  contact: "section";
  row4: "div";
  title3: "div";
  portfolio: "section";
  graphCmsFetcher: typeof GraphCMSFetcher;
  graphCmsField: typeof GraphCMSField;
  partner: "section";
  footer: "footer";
  logo2: "div";
  ul: "ul";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navigationBar: makeNodeComponent("navigationBar"),
    header: makeNodeComponent("header"),
    udangan: makeNodeComponent("udangan"),
    udangan2: makeNodeComponent("udangan2"),
    about: makeNodeComponent("about"),
    row: makeNodeComponent("row"),
    item: makeNodeComponent("item"),
    item2: makeNodeComponent("item2"),
    item3: makeNodeComponent("item3"),
    item4: makeNodeComponent("item4"),
    feature: makeNodeComponent("feature"),
    row2: makeNodeComponent("row2"),
    title: makeNodeComponent("title"),
    price: makeNodeComponent("price"),
    row3: makeNodeComponent("row3"),
    title2: makeNodeComponent("title2"),
    items: makeNodeComponent("items"),
    items2: makeNodeComponent("items2"),
    items3: makeNodeComponent("items3"),
    items4: makeNodeComponent("items4"),
    items5: makeNodeComponent("items5"),
    items6: makeNodeComponent("items6"),
    items7: makeNodeComponent("items7"),
    items8: makeNodeComponent("items8"),
    items13: makeNodeComponent("items13"),
    items14: makeNodeComponent("items14"),
    items15: makeNodeComponent("items15"),
    items16: makeNodeComponent("items16"),
    items9: makeNodeComponent("items9"),
    items10: makeNodeComponent("items10"),
    items11: makeNodeComponent("items11"),
    items12: makeNodeComponent("items12"),
    contact: makeNodeComponent("contact"),
    row4: makeNodeComponent("row4"),
    title3: makeNodeComponent("title3"),
    portfolio: makeNodeComponent("portfolio"),
    graphCmsFetcher: makeNodeComponent("graphCmsFetcher"),
    graphCmsField: makeNodeComponent("graphCmsField"),
    partner: makeNodeComponent("partner"),
    footer: makeNodeComponent("footer"),
    logo2: makeNodeComponent("logo2"),
    ul: makeNodeComponent("ul"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "bentukcinta",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
